WHEN UNIT SELECTED:

battle_manager:register_unit_selection_callback(unit subject unit, function callback)
Registers a function to be called when a specified unit is selected by the player.
Parameters:
1

unit

subject unit

2

function

callback

Returns:
nil
defined in ../working_data/script/_lib/lib_battle_manager.lua, line 662

battle_manager:unregister_unit_selection_callback(unit subject unit)
Unregisters a function registered with battle_manager:register_unit_selection_callback.
Parameters:
1

unit

subject unit

Returns:
nil
defined in ../working_data/script/_lib/lib_battle_manager.lua, line 690

END

WHEN BATTLE PHASE CHANGED:
battle_manager:setup_battle(function deployment end callback)
Packaged function to set up a scripted battle on startup, and register a function to be called when the deployment phase ends (i.e. when battle starts). setup_battle will suppress a variety of unit sounds and steal input focus until the combat phase begins.
Parameters:
1

function

deployment end callback

Returns:
nil
defined in ../working_data/script/_lib/lib_battle_manager.lua, line 576

battle_manager:register_phase_change_callback(string phase change name, function callback)
Registers a function to be called when a specified phase change occurs. Phase change notifications are sent to the script by the game when the battle changes phases, from 'Deployment' to 'Deployed' and on to 'VictoryCountdown' and 'Complete'. The battle manager writes debug output whenever a phase change occurs, regardless of whether any callback has been registered for it.
This wraps the underlying functionality provided by battle:register_battle_phase_handler. See that function's documentation for a list of phase change events that may be listened for.
Parameters:
1

string

phase change name

2

function

callback

Returns:
nil
defined in ../working_data/script/_lib/lib_battle_manager.lua, line 607

battle_manager:get_player_army()
Returns the local player's army object.
Returns:
army player's army
defined in ../working_data/script/_lib/lib_battle_manager.lua, line 468

END

GET PLAYER ARMIES

battle_manager:get_player_army()
Returns the local player's army object.
Returns:
army player's army
defined in ../working_data/script/_lib/lib_battle_manager.lua, line 468

END

GET CAMERA POSITION

camera:position()
Returns the current position of the camera.
Returns:
battle_vector position

END

GET DISTANCE BETWEEN UNITS and A POINT

is_close_to_position(
  object collection of units,
  vector position,
  number range in m,
  boolean 2D only,
  boolean non-routing only
)
Returns true if any units or sunits in a supplied collection are within a given range of a given position, false otherwise.
Parameters:
1

object

Collection of units. Supported container types are scriptunits, units, army, armies, alliance and table.

2

vector

position

3

number

range in m

4

boolean

Consider 2 dimensional distance only. If true, then is_close_to_position disregards height differences in its distance calculation.

5

boolean

Disregard routing or dead units from inclusion in the result.

Returns:
integer number within range of position
Loaded in Battle	loaded in battle


END